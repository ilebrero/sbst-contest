/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 12 08:37:34 GMT 2021
 */

package com.google.common.primitives;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.common.primitives.UnsignedLongs;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnsignedLongs_ESTest extends UnsignedLongs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = "";
      long[] longArray0 = new long[2];
      long long0 = 1L;
      longArray0[1] = long0;
      String string1 = UnsignedLongs.join(string0, longArray0);
      assertEquals(2, longArray0.length);
      assertArrayEquals(new long[] {0L, 1L}, longArray0);
      assertEquals("01", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = "";
      long[] longArray0 = new long[2];
      long long0 = (-1L);
      longArray0[1] = long0;
      String string1 = UnsignedLongs.join(string0, longArray0);
      assertEquals(2, longArray0.length);
      assertArrayEquals(new long[] {0L, (-1L)}, longArray0);
      assertEquals("018446744073709551615", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = "";
      long[] longArray0 = new long[0];
      String string1 = UnsignedLongs.join(string0, longArray0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      assertEquals("", string1);
      assertNotNull(string1);
      assertSame(string0, string1);
      assertSame(string1, string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long long0 = 0L;
      int int0 = UnsignedLongs.compare(long0, long0);
      assertEquals(0, int0);
  }
}
