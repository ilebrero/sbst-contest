/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 12 08:36:28 GMT 2021
 */

package com.google.common.primitives;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.primitives.SignedBytes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SignedBytes_ESTest extends SignedBytes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = SignedBytes.max(byteArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte)0}, byteArray0);
      assertFalse(byte1 == byte0);
      assertEquals(2, byteArray0.length);
      assertEquals((byte)0, byte1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = SignedBytes.max(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
      assertEquals(2, byteArray0.length);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        SignedBytes.max(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long long0 = 0L;
      byte byte0 = SignedBytes.checkedCast(long0);
      assertEquals((byte)0, byte0);
  }
}
